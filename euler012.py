"""
Последовательность треугольных чисел образуется путем сложения натуральных чисел. К примеру, 7-е треугольное число равно 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. Первые десять треугольных чисел:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Перечислим делители первых семи треугольных чисел:

 1: 1
 3: 1, 3
 6: 1, 2, 3, 6
10: 1, 2, 5, 10
15: 1, 3, 5, 15
21: 1, 3, 7, 21
28: 1, 2, 4, 7, 14, 28
Как мы видим, 28 - первое треугольное число, у которого более пяти делителей.

Каково первое треугольное число, у которого более пятисот делителей?
https://euler.jakumo.org/problems/view/12.html

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
https://projecteuler.net/problem=12
"""


def triangleNums():
    summ = 0
    num = 1
    while True:
        summ += num
        # print(num, summ)
        yield summ
        num += 1
        # if num > 10:
        #     break


def _main():
    for num in triangleNums():
        r = []
        i = 1
        while i * i <= num:
            if num % i == 0:
                r.append(i)
                if num / i != i:
                    r.append(int(num / i))
            i += 1
        # print(num, r)
        if len(r) > 500:
            return (num, r)


if __name__ == "__main__":
    print(_main())
